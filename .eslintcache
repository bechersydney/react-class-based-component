[{"D:\\react-project\\class-based-component\\src\\index.js":"1","D:\\react-project\\class-based-component\\src\\App.js":"2","D:\\react-project\\class-based-component\\src\\components\\Users.js":"3","D:\\react-project\\class-based-component\\src\\components\\User.js":"4","D:\\react-project\\class-based-component\\src\\components\\UserFinder.js":"5","D:\\react-project\\class-based-component\\src\\store\\users-context.js":"6"},{"size":179,"mtime":1648621304000,"results":"7","hashOfConfig":"8"},{"size":461,"mtime":1662983481789,"results":"9","hashOfConfig":"8"},{"size":1521,"mtime":1662979058267,"results":"10","hashOfConfig":"8"},{"size":319,"mtime":1662951868165,"results":"11","hashOfConfig":"8"},{"size":2275,"mtime":1662984093420,"results":"12","hashOfConfig":"8"},{"size":127,"mtime":1662983349172,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1bzpuw7",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react-project\\class-based-component\\src\\index.js",[],["28","29"],"D:\\react-project\\class-based-component\\src\\App.js",[],"D:\\react-project\\class-based-component\\src\\components\\Users.js",[],"D:\\react-project\\class-based-component\\src\\components\\User.js",[],"D:\\react-project\\class-based-component\\src\\components\\UserFinder.js",["30"],"import { Component, Fragment } from \"react\";\r\nimport UsersContext from \"../store/users-context\";\r\n\r\nimport classes from \"./UserFinder.module.css\";\r\nimport Users from \"./Users\";\r\nconst DUMMY_USERS = [\r\n    { id: \"u1\", name: \"Max\" },\r\n    { id: \"u2\", name: \"Manuel\" },\r\n    { id: \"u3\", name: \"Julie\" },\r\n];\r\n\r\nclass UserFinder extends Component {\r\n    static contextType = UsersContext; //context type is reserved for react\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            filteredUsers: [],\r\n            searchTerm: \"\",\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ filteredUsers: this.context.users });\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.searchTerm !== this.state.searchTerm) {\r\n            this.setState({\r\n                filteredUsers: this.context.users.filter((user) =>\r\n                    user.name.includes(this.state.searchTerm)\r\n                ),\r\n            });\r\n        }\r\n    }\r\n    componentWillUnmount() {}\r\n    searchChangeHandler(e) {\r\n        this.setState({ searchTerm: e.target.value });\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className={classes.finder}>\r\n                    <input\r\n                        type=\"search\"\r\n                        onChange={this.searchChangeHandler.bind(this)}\r\n                    />\r\n                </div>\r\n                <Users users={this.state.filteredUsers} />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n// const UserFinder = () => {\r\n//     const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\r\n//     const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n//     useEffect(() => {\r\n//         setFilteredUsers(\r\n//             DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\r\n//         );\r\n//     }, [searchTerm]);\r\n\r\n//     const searchChangeHandler = (event) => {\r\n//         setSearchTerm(event.target.value);\r\n//     };\r\n\r\n//     return (\r\n//         <Fragment>\r\n//             <div className={classes.finder}>\r\n//                 <input type=\"search\" onChange={searchChangeHandler} />\r\n//             </div>\r\n//             <Users users={filteredUsers} />\r\n//         </Fragment>\r\n//     );\r\n// };\r\n\r\nexport default UserFinder;\r\n","D:\\react-project\\class-based-component\\src\\store\\users-context.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":6,"column":7,"nodeType":"37","messageId":"38","endLine":6,"endColumn":18},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'DUMMY_USERS' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]